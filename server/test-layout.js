const PDFDocument = require('pdfkit');
const fs = require('fs');

function testLayout() {
  console.log('Testing PDF layout for single page...');
  
  const doc = new PDFDocument({ margin: 50 });
  const stream = fs.createWriteStream('layout-test.pdf');
  doc.pipe(stream);
  
  // Set font
  doc.font('Helvetica');
  
  // Calculate page dimensions
  const pageWidth = doc.page.width;
  const pageHeight = doc.page.height;
  const margin = 50;
  const contentWidth = pageWidth - (margin * 2);
  
  console.log(`Page dimensions: ${pageWidth} x ${pageHeight}`);
  console.log(`Content width: ${contentWidth}`);
  
  // Header background
  doc.rect(0, 0, pageWidth, 80).fill('#f4e1ba');
  
  // Logo
  doc.circle(pageWidth / 2, 35, 20).fill('#153059');
  doc.circle(pageWidth / 2, 35, 20).stroke('#f4e1ba').lineWidth(2);
  doc.fontSize(8).font('Helvetica-Bold').fill('#f4e1ba').text('PALM', pageWidth / 2, 28, { align: 'center' });
  doc.fontSize(6).font('Helvetica').text('CAFE', pageWidth / 2, 40, { align: 'center' });
  
  // Business name
  doc.fontSize(20).font('Helvetica-Bold').fill('#153059').text('PALM CAFE', 0, 60, { align: 'center', width: pageWidth });
  
  // Invoice title
  doc.fontSize(16).font('Helvetica-Bold').fill('#75826b').text('INVOICE', 0, 100, { align: 'center', width: pageWidth });
  
  // Invoice info
  let currentY = 120;
  
  doc.fontSize(11).font('Helvetica-Bold').fill('#153059').text('Invoice #:', margin, currentY);
  doc.fontSize(11).font('Helvetica').text('1024', margin + 70, currentY);
  
  doc.fontSize(9).font('Helvetica').text('Date: 7/17/2025', margin, currentY + 15);
  doc.fontSize(9).font('Helvetica').text('Time: 9:23:38 PM', margin, currentY + 28);
  
  doc.fontSize(11).font('Helvetica-Bold').fill('#153059').text('Customer:', margin + 300, currentY);
  doc.fontSize(11).font('Helvetica').text('test', margin + 370, currentY);
  
  // Table
  currentY += 45;
  
  doc.roundedRect(margin, currentY, contentWidth, 25, 5).fill('#f4e1ba');
  doc.fontSize(10).font('Helvetica-Bold').fill('#153059');
  doc.text('Item', margin + 10, currentY + 8, { width: 200 });
  doc.text('Qty', margin + 220, currentY + 8, { width: 60, align: 'right' });
  doc.text('Price', margin + 290, currentY + 8, { width: 80, align: 'right' });
  doc.text('Total', margin + 380, currentY + 8, { width: 80, align: 'right' });
  
  currentY += 25;
  
  // Sample item
  doc.rect(margin, currentY, contentWidth, 20).fill('#f8f8f8');
  doc.fontSize(9).font('Helvetica').fill('#153059');
  doc.text('Cappuccino', margin + 10, currentY + 6, { width: 200 });
  doc.text('1', margin + 220, currentY + 6, { width: 60, align: 'right' });
  doc.text('Rs.4.50', margin + 290, currentY + 6, { width: 80, align: 'right' });
  doc.text('Rs.4.50', margin + 380, currentY + 6, { width: 80, align: 'right' });
  
  currentY += 20;
  
  // Totals
  currentY += 10;
  
  doc.fontSize(10).font('Helvetica-Bold').fill('#75826b');
  doc.text('Subtotal:', margin + 290, currentY, { width: 80, align: 'right' });
  doc.text('Rs.4.50', margin + 380, currentY, { width: 80, align: 'right' });
  currentY += 15;
  
  doc.text('Tax:', margin + 290, currentY, { width: 80, align: 'right' });
  doc.text('Rs.0.38', margin + 380, currentY, { width: 80, align: 'right' });
  currentY += 15;
  
  // Total block
  doc.roundedRect(margin + 280, currentY, 180, 22, 5).fill('#75826b');
  doc.fontSize(10).font('Helvetica-Bold').fill('#ffffff');
  doc.text('Total:', margin + 290, currentY + 5, { width: 80, align: 'right' });
  doc.text('Rs.4.88', margin + 380, currentY + 5, { width: 80, align: 'right' });
  
  // Footer
  const footerY = pageHeight - 50;
  doc.rect(0, footerY, pageWidth, 50).fill('#153059');
  
  doc.circle(margin + 10, footerY + 15, 10).fill('#f4e1ba');
  doc.fontSize(9).font('Helvetica-Bold').fill('#ffffff').text('Thank you for visiting Palm Cafe!', 0, footerY + 10, { align: 'center', width: pageWidth });
  doc.fontSize(6).font('Helvetica').fill('#f4e1ba').text('Generated by Palm Cafe Management System', 0, footerY + 25, { align: 'center', width: pageWidth });
  
  console.log(`Final Y position: ${currentY + 22}`);
  console.log(`Footer Y position: ${footerY}`);
  console.log(`Space remaining: ${footerY - (currentY + 22)}`);
  
  doc.end();
  
  stream.on('finish', () => {
    console.log('âœ… Layout test PDF generated: layout-test.pdf');
    console.log('Check if it fits on one page');
  });
}

testLayout(); 